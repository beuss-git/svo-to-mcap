find_package(Protobuf 3 REQUIRED)
include_directories(${PROTOBUF_INCLUDE_DIR} ${Protobuf_INCLUDE_DIRS})

file(GLOB all_protos "proto/foxglove/*.proto")

if (NOT all_protos)
  message(FATAL_ERROR "No proto files found in proto/foxglove")
endif()

foreach(f ${all_protos})
  file(RELATIVE_PATH f ${CMAKE_CURRENT_SOURCE_DIR}/proto ${f})
  string(REGEX REPLACE "\\.proto$" "" f ${f})
  LIST(APPEND proto_sources "autogenerated/${f}.pb.h")
  LIST(APPEND proto_sources "autogenerated/${f}.pb.cc")
endforeach(f)

add_custom_command(
    OUTPUT ${proto_sources}
    COMMAND ${CMAKE_COMMAND} -E make_directory autogenerated
    COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR}/proto --cpp_out=autogenerated ${all_protos}
)

add_library(foxglove_proto_lib ${proto_sources})
target_link_libraries(foxglove_proto_lib INTERFACE ${Protobuf_LIBRARIES})
target_include_directories(foxglove_proto_lib SYSTEM PUBLIC ${CMAKE_CURRENT_BINARY_DIR}/autogenerated)

# Unfortunately the protobuf library headers include some unused parameters, which have to be
# downgraded back to warnings for all targets that depends on them.
if (MSVC)
  target_compile_options(foxglove_proto_lib PUBLIC /wd4100 /wd4267 /wd4244)
else()
  target_compile_options(foxglove_proto_lib PUBLIC -Wno-error=unused-parameter -Wno-error=useless-cast)
endif()
